import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintStream;
import java.io.PrintWriter;
import java.net.InetAddress;
import java.util.Scanner;

import javax.servlet.Filter;
import javax.servlet.FilterChain;
import javax.servlet.FilterConfig;
import javax.servlet.ServletException;
import javax.servlet.ServletRequest;
import javax.servlet.ServletResponse;

public class FiltroIP implements Filter {
	
	
	@Override
	public void destroy() { // Se ejecuta una vez antes de que todo se cierre
		// TODO Auto-generated method stub
		System.out.println("FiltrosO : destroy");
	}

	@Override
	public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws IOException, ServletException {
		System.out.println("inicio: FiltroOrden");

        // *********** Obtener la IP *********************************************************
        
		chain.doFilter(request, response); // Filtro de ida a vuelta y de vuelta a ida. La ejecución del programa pasa al siguiente filtro para hacer determinada tarea (registrar en la base de datos, cambiar datos, etc)..

		try{
		
			String thisIp = InetAddress.getLocalHost().getHostAddress();
			response.setContentType("text/html"); // Mostrar por web (no por console)
			System.out.println("\n" + "IP:"+thisIp);
			
			File ficheroIP = new File("E:/I/Programación/ZZ_J2EE_SQL/J2EE/FicheroIP.txt"); // Ruta donde se guardan las sesiones
			ficheroIP.createNewFile(); // Método que crea un fichero vacío si el fichero no existe. Si el fichero se crea devuelve true y si el fichero existe devuelve false
			FileWriter z = new FileWriter(ficheroIP, true); // Objeto que tiene como función escribir datos en un archivo
			BufferedWriter z2 = new BufferedWriter(z); // Objeto que reserva un espacio en memoria donde se guarda la información
													   // antes de ser escrita en un archivo. Permite añadir una línea
			PrintWriter zr = new PrintWriter(z2); // Objeto para escribir directamente sobre el archivo de texto
			zr.write("IP: " +thisIp);// Escribir en el archivo la IP
			zr.close(); // Ahora cerrar los flujos de canales de datos, al cerrar el archivo
			z2.close();
			

		}
		catch(Exception e) 
		{
			e.printStackTrace();
		}
					    

	}
	
	@Override
	public void init(FilterConfig arg0) throws ServletException { //Inicio del filtro (una vez en todo el ciclo de vida)
		// TODO Auto-generated method stub
		System.out.println("FiltroNombre : init");		
		
	}

}